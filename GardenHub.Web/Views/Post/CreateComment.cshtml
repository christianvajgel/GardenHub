@model GardenHub.Web.ViewModel.Post.PostViewModel

@{
    ViewData["Title"] = "CreateComment";
}

<h1>CreateComment</h1>

<h4>Comment</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateComment">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Comment.Text" class="control-label"></label>
                <input asp-for="Comment.Text" class="form-control" />
                <span asp-validation-for="Comment.Text" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>

</div>

<table class="table">
    <thead>
        <tr>
            <th>
                Data do Comentario
            </th>
            <th>
                Texto
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Comments.OrderByDescending(x => x.PostedTime))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.PostedTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Text)
                </td>
                @if (Model.Account.Id == item.AccountOwnerId)
                {

            <td>
                <a asp-action="EditComment" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="DeleteComment" asp-route-id="@item.Id">Delete</a>
            </td>
                }
                else
                {
                    <td></td>
                }
            </tr>
        }
    </tbody>
</table>


<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
